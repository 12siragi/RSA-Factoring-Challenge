#!/usr/bin/python3

from fractions import gcd
from sys import argv

def pollards_rho(n):
    # Implement Pollard's rho algorithm
    x = 2
    y = 2
    d = 1
    f = lambda x: (x**2 + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = gcd(abs(x - y), n)
    if d != n:
        return d

def factorize_number(number):
    if number % 2 == 0:
        # If the number is even, perform simple factorization
        return [number // 2, 2]
    else:
        # Use Pollard's rho algorithm for odd numbers
        p = pollards_rho(number)
        return [p, number // p]

def read_file(filename):
    # Read numbers from the file passed as argument
    with open(filename) as file:
        for line in file:
            num = int(line.strip())
            factors = factorize_number(num)
            print("{}={}*{}".format(num, factors[0], factors[1]))

if __name__ == "__main__":
    if len(argv) != 2:
        print("Usage: ./rsa input_file.txt")
    else:
        input_file = argv[1]
        read_file(input_file)
